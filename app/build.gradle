apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "com.google.firebase.crashlytics"
apply plugin: "com.google.gms.google-services"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "tk.lorddarthart.githubuserfinder"
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode versionBuild
        versionName "${rootProject.versionMajor}.${rootProject.versionMinor}.${rootProject.versionPatch}-b${rootProject.versionBuild}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
    }
    signingConfigs {
        debug {}
        release {}
    }
    buildTypes {
        debug {
            versionNameSuffix "-dev"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            versionNameSuffix "-release"
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (output.outputFile != null && output.outputFile.name.endsWith(".apk")) {
                def mFileName = "github-user-finder-v${versionName}.apk"
                outputFileName = mFileName
            }
        }
    }
    dataBinding.enabled = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    apply from: "../dependencies.gradle"

    // Core
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:$androidCoreVersion"

    // Base
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.fragment:fragment-ktx:$androidFragmentVersion"
    implementation "com.google.android.material:material:$materialVersion"

    // Android"s Architecture Components
    implementation "androidx.lifecycle:lifecycle-viewmodel:$architectureComponentsVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$architectureComponentsVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"
    kapt "androidx.lifecycle:lifecycle-common-java8:$architectureComponentsVersion"

    // Data Binding Library
    kapt "com.android.databinding:compiler:$databinding_library_version"

    // Kotlin support
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Firebase Libraries
    implementation "com.google.firebase:firebase-core:$firebase_core_version"
    implementation "com.google.firebase:firebase-auth:$firebase_auth_version"
    implementation "com.google.firebase:firebase-crashlytics:17.4.0"
    implementation "com.google.firebase:firebase-analytics:18.0.2"

    // Google Play Services Auth
    implementation "com.google.android.gms:play-services-auth:$play_services_auth_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // OkHttp3 Logging interceptor for logging during Http request.
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor_version"

    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // CircleImageView
    implementation "de.hdodenhof:circleimageview:$circle_image_view_version"
}
